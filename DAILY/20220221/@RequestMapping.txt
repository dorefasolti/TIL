학원에서 배우는 코드만 보다가, 채팅 프로그램을 만들어보고 싶어서 구글링했더니 
@RequestMapping() <- 괄호 안의 형식이 다른걸 발견

학원코드 : @RequestMapping("list.bo")
다른코드 : @RequestMapping(value = "/", method = RequestMethod.GET)

다르게 작성하는 방식인 줄 알았으나, 아래 코드를 위 코드와 동일하게 수정해도 잘 실행되는 것을 확인
Spring legacy Project를 생성했을 때, 기본적으로 생성되는 Controller인 Homecontroller에 위와 같이 적혀있는것을 보니
기본적으로 저렇게 적는 것이 정석이고, 학원에서 사용하는 코드는 생략된 것이라는 걸 알게됨

* JSP에서 POST방식으로 전송했으나, @RequestMapping에서 다른 방식으로 받는다면?
<form id="login-form" method="post" action="/loginProcess.do">
@RequestMapping(value = "/loginProcess.do", method = RequestMethod.GET)

타입 상태 보고
메시지 Request method 'POST' not supported
설명 요청 행에 포함된 해당 메소드는, origin 서버에 의해 인지되었으나, 대상 리소스에 의해 지원되지 않습니다.
콘솔에는
WARN : org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
이런 메시지가 출력된다

=> 오류 발생



* POST방식으로 넘기고자 할 때 JSP에서 method를 생략하고, @RequestMapping에서는 작성한다면?
<form id="login-form" method="post" action="/loginProcess.do">
@RequestMapping(value = "/loginProcess.do", method = RequestMethod.POST)

상태 405 – 허용되지 않는 메소드
타입 상태 보고
메시지 Request method 'GET' not supported
설명 요청 행에 포함된 해당 메소드는, origin 서버에 의해 인지되었으나, 대상 리소스에 의해 지원되지 않습니다.

=> 오류 발생



* GET방식으로 넘기고자 할 때, JSP에서 method를 생략하고, @RequestMapping에서는 작성한다면
<form id="login-form" action="/loginProcess.do">
@RequestMapping(value = "/loginProcess.do", method = RequestMethod.GET)

=> 정상 작동(form태그 method의 기본값이 get이기 때문으로 보임)



결론 
1. method를 둘 다 입력하고자 한다면, jsp파일과 controller에서 형식이 일치해야 한다. 
2. jsp에서 form태그 이용해 submit 시 method를 입력했다면 @RequestMapping에서는 생략해도 괜찮다
3. form태그의 method는 기본값이 get방식이기 때문에 get방식을 사용하고자 할 경우에는, jsp에서 method를 생략해도 된다
(post방식에서는 절대 불가! get - post로 불일치가 되어 오류 발생)

