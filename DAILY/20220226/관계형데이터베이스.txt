개념적 데이터 모델링은 개념에 집중,
데이터베이스 패러다임으로부터 거리를 두고 있기 때문에 용어가 실제 데이터베이스 제품들과는 다르다

Entity -> table
atribute -> column
relation -> PK, FK(기본키, 외래키)
Tuble -> Row(행)


-
식별자(한국인 - 주민번호, 자동차 - 자동차번호)
그 대상을 제외한 어느 누구도 같은 값을 가지고 있으면 안 됨
-> 기본키가 된다

유저번호 이메일 주민번호 이름 거주지
이름과 거주지는 같을 수 있으니까 탈락

email은 한 사람이 여러개의 이메일을 가질 수 있을 수도 있으니까 애매할수도

행이 추가될때마다 하나씩 추가되게 만들어 구분하게 하는 것(userNo)
-> 자연스럽게 만들어진 식별자가 아니라 인조키

식별자가 될 수 있는 후보 -> candidate key => 유저번호, 이메일, 주민번호
기본키가 되지 못한 키들을 후보키

--
중복키
직원번호 부서번호 부서배정일
1	1	2010
2	1	2011
1	2	2000

부서번호 1의 직원번호 1
부서번호 2의 직원번호 1
직원번호가 겹친다
부서번호와 직원번호를 함께 봐야 식별 가능 => 중복키



- 
카디널리티
담임은 하나의 반만 담당한다
반에게 담임은 한명이다
김선생 - 1반
1:1관계

글쓴이는 댓글을 여러개 쓸 수 있다
댓글에는 하나의 글쓴이만 존재한다
1:다 1:N 

자유롭게 작성하고 자유롭게 수정할 수 있는 상황일때
글쓴이는 여러개의 글을 작성할 수 있다
각 글은 여러 글쓴이가 존재한다
다대다
N:M
(실제 데이터베이스에서 표현할 수 없어서 연결해주는게 필요함)

옵셔널리티

저자는 댓글을 작성하지 않을 수도 있다(댓글측에 동그라미)
(저자에게 댓글은 옵션이다)
댓글이 존재하려면 반드시 저자가 있어야 한다(저자측에 |)


http://erd.yah.ac/
연습사이트


--
논리적 데이터 모델링

Mapping Rule
Er다이어그램 통해서 우리가 표현한 내용을 관계형데이터베이스 만든 형식으으로 전환할 때 사용할 수 있는 방법론



--
정규화 == normalization


1정규화 == atimic column