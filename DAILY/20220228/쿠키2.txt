package com.mira.cookie;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
public class CookieController {
	@RequestMapping("create")
	public String create(HttpServletResponse response) {
		//쿠키는 객체를 생성한 다음 응답정보에 첨부해야 완전히 생성
		//name, value 속성은 필수로 작성을 해줘야함, expire등은 선택
		
		//name과 value 모두 문자열만 가능(아스키코드만) == 한글X
//		공공데이터때 썼던 urlencoder, urldecoder사용하면 되긴 하는데 복잡
		
		//expire는 만료시간 언제까지할거냐, 
		//session으로 되어있다면 브라우저 끌 때까지
		
		
		Cookie ck = new Cookie("test", "testtest");
		//setMaxAge == 만료시간 위치가 중요! 꼭 여기에 
		ck.setMaxAge(10);
		
		
		response.addCookie(ck);
		
		Cookie si = new Cookie("saveId", "gg");
		si.setMaxAge(60 * 60 * 24 * 28);
		response.addCookie(si);
		
		Cookie pop = new Cookie("pop", "ad");
		pop.setMaxAge(60 * 60 * 24 * 28);
		response.addCookie(pop);
		
	
		
		return "cookie/create";
	}
	
	@RequestMapping("delete")
	public String delete(HttpServletResponse response) {
		//쿠키는 삭제 명령어가 따로 존재하지 않음
		//0초로 만료시간 설정 후 덮어쓰기 수행
		
		Cookie ck = new Cookie("test", "nono");
		ck.setMaxAge(0);
		response.addCookie(ck);
		return "cookie/delete";
	}

	@RequestMapping("/list1")
	public String list1() {
		return "cookie/list1";
	}
	
	
	//@CookieValue는 쿠키를 찾아주는 어노테이션
	//기본값이 필수이므로 필수가 아닌 경우 에러 발생
	@ResponseBody //jsp반납하지않겠다..
	@RequestMapping("/list2")
	public String list2(@CookieValue(required=false) Cookie test) {
		System.out.println(test.getValue());
		
		
		return "list2";
	}
}
